import{ab as i,H as n,I as o,G as s,V as a,O as r,ad as p,ac as e,Y as l}from"./framework-c2f60e5e.js";const d={},c=e(`<h1 id="_2023-04-11-第五周" tabindex="-1"><a class="header-anchor" href="#_2023-04-11-第五周" aria-hidden="true">#</a> 2023-04-11-第五周</h1><h2 id="本周总结" tabindex="-1"><a class="header-anchor" href="#本周总结" aria-hidden="true">#</a> 本周总结</h2><h3 id="搞咗乜嘢" tabindex="-1"><a class="header-anchor" href="#搞咗乜嘢" aria-hidden="true">#</a> 搞咗乜嘢</h3><ul><li>手动脱壳小技巧：找到OEP，并且修复表，获得正常的入口。</li><li>GDOUCTF，看了大上午，只搞了个多元方程……Tea算法现学，找不到加密的密文，找到key和脚本了。</li><li>《逆向工程核心原理》，跟着教程一步一步看程序，很多操作很神奇，第二章看完了。基础操作还是很实用的。</li><li></li></ul><h3 id="新知识" tabindex="-1"><a class="header-anchor" href="#新知识" aria-hidden="true">#</a> 新知识</h3><h4 id="计算机中dump的含义" tabindex="-1"><a class="header-anchor" href="#计算机中dump的含义" aria-hidden="true">#</a> 计算机中Dump的含义</h4><p>Dump的本意是&quot;倾卸垃圾&quot;、&quot;把(垃圾桶)倒空&quot;。在计算机技术中使用Dump的主要意思依然如此,即当电脑运行出现故障而无法排除时,通常要重新启动。为了找出故障的原因,需要分析现场(即出现故障时整个内存的当前状况),在重新启动系统之前需要把内存中的一片0、1(这时它们尤如一堆垃圾)&quot;卸出&quot;保存起来,以便由专家去分析引起故障的原因。</p><blockquote><ol><li><p><em>n</em>. A collection or recitation of allavailable information about a problem (as in: &quot;I need a quick dump on thatissue.&quot;).</p></li><li><p><em>v</em>. To record, at aparticular instant, the contents of all or part of one storage device inanother storage device. Dump data is extremely useful when debugging theproblem.</p></li><li><p><em>n</em>. Data that has beendumped.</p></li><li><p><em>v</em>. To copy data in areadable format from main or auxiliary storage onto an external medium such astape, diskette, or printer.</p></li><li><p><em>v</em>. Tocopy the contents of all or part of virtual storage for the purpose ofcollecting error information.</p></li></ol><p><strong>译文：</strong></p><ol><li><p><em>名词</em>。收集或逐一列举关于某个问题的所有可用信息（如：“我需要一个关于该问题的快速转储”。）</p></li><li><p><em>动词</em>。在特定时刻，将记录或数据从一个存储设备转储到另一个存储设备上以保护数据。在调试问题时，转储数据非常有用。</p></li><li><p><em>名词</em>。已转储的数据。</p></li><li><p><em>动词</em>。以可读格式将数据从主存储器或辅助存储器复制到外部介质上，如磁带、软盘或打印机。</p></li><li><p><em>动词</em>。为了收集错误信息而复制全部或部分虚拟存储器的内容。</p></li></ol></blockquote><p>由此可见，dump可作为动词也可看作名词。作为动词时宜译为&quot;转储&quot;。作为名词时，可将经转储而产生的那些数据（内容）称作dump，这些数据实际上就是内存中由一片0、1组成的map(映像),因此,这时的dump应译为&quot;内像&quot;(内存中的映像)。</p><p>比如以前人们在IBM主机系统中做dump时,通常是转储到磁带上,所以有人把这盘磁带也叫dump。为了便于阅读与分析,把内像按既定的格式打印在纸上,人们便把这一堆打印纸也叫dump。为了实现以上二项工作,必须有相应的程序,人们把这种程序也叫dump,实为dump routine的简写。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>在Linux系统中有一些带dump字样的命令，如：
dump：用于备份文件系统
hexdump：用来查看文件的十六进制编码
tcpdump：转储网络上的数据流
objdump：查看目标文件的信息
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="新工具-lordpe和import-rec-脱壳工具" tabindex="-1"><a class="header-anchor" href="#新工具-lordpe和import-rec-脱壳工具" aria-hidden="true">#</a> 新工具：LordPE和Import REC（脱壳工具）</h4><h4 id="oep是什么" tabindex="-1"><a class="header-anchor" href="#oep是什么" aria-hidden="true">#</a> OEP是什么</h4>`,13),u=e(`<h2 id="ctf-reverse练习之脱壳分析" tabindex="-1"><a class="header-anchor" href="#ctf-reverse练习之脱壳分析" aria-hidden="true">#</a> CTF-REVERSE练习之脱壳分析</h2><p>打开看到程序需要脱壳。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304131954821.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>PEiD可以看到UPX加壳。在自己机子上可以直接用图形化的软件脱壳。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304131955863.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里使用Ollydbg进行脱壳。打开软件后可以看到页面停止在Pushad函数上。从这里步进观察ESP寄存器，并“在数据窗口中跟随”。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304132005304.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在数据窗口中选择<code>0012FFA4</code>的前四个字节，右键<code>断点-硬件访问-Dword</code>。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304132013842.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>接下来按下F9运行程序，程序运行一段时间后OD将自动断下，这时候先删除之前设置的硬件断点，依次选择菜单项中的<code>调试——硬件断点</code>，删除我们设置的硬件断点。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304132025677.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304132026433.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>随后可以开始F7步进，让程序运行到0043FD24处。继续步进，跳到004094F8处。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304132029178.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304132039478.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在反汇编指令窗口中单击鼠标右键，选择“Dump debugged process”菜单项，在弹出的OllyDump窗口选择“Dump”按钮保存文件。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304132043302.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>后面还需要在OD中进行修复操作。<strong>对UPX脱壳而言，进行到这一步就可以了</strong>，但是如果是另外一些壳，可能还需要对程序的输入表进行修复操作。</p><p>现在需要<strong>修复脱壳后的程序</strong>，用Import REC打开，然后做一大堆（完全不懂为什么的）步骤。其中OEP（original entry point 原始入口点）填入前面找到的入口点信息。</p><p>首先在进程列表中选择C:\\Reverse\\6\\crackme6.exe，然后在OEP中填入94F8（也就是在OD中找到的一个信息），然后点击“IAT AutoSearch”按钮，接着点击“GetImports”按钮，就可以看到程序的输入表信息了。</p><p>点击右侧的“Show Invalid”按钮，看看是否存在无效的输入表项目。无效的输入表项目前面带有问号（？），如果有可以使用右键菜单删除。这里没有无效的输入表项目，所以选择“Fix Dump”按钮，对我们的dumped.exe进行修复，得到dumped_.exe程序。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304132121521.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304132123000.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304132158778.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="ctf-reverse练习之病毒分析" tabindex="-1"><a class="header-anchor" href="#ctf-reverse练习之病毒分析" aria-hidden="true">#</a> CTF-REVERSE练习之病毒分析</h2><h3 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h3><h4 id="_7zip" tabindex="-1"><a class="header-anchor" href="#_7zip" aria-hidden="true">#</a> 7Zip</h4><p>7-Zip 是一款开源软件。我们可以在任何一台计算机上使用 7-Zip ，包括用在商业用途的计算机。7-Zip 适用于 Windows 7 / Vista / XP / 2008 / 2003 / 2000 / NT / ME / 98。并且有面向 Mac OS X、Linux、Unix 平台的命令行版本。</p><p>7zip使用起来十分方便，通过添加的右键菜单，可以尝试对任意文件进行解压缩操作。7zip支持的文件格式十分丰富，其中压缩包括：7z, XZ, BZIP2, GZIP, TAR, ZIP and WIM等格式，解压缩包括：ARJ, CAB, CHM, CPIO, CramFS, DEB, DMG, FAT, HFS, ISO, LZH, LZMA, MBR, MSI, NSIS, NTFS, RAR, RPM, SquashFS, UDF, VHD, WIM, XAR, Z等格式。</p><p>在一些CTF逆向分析的题目中，我们可以尝试使用7zip对其进行解压缩操作，可能就会有意想不到的效果，可以大大加快我们的分析过程。</p><h4 id="在线沙箱" tabindex="-1"><a class="header-anchor" href="#在线沙箱" aria-hidden="true">#</a> 在线沙箱</h4><p>网上有许多公开的在线沙箱，使用这些沙箱提供的服务，我们可以方便的观察一个程序的详细行为报告，进而判断一个程序大致的内部逻辑。</p><p>在线沙箱通常用于大致判定一个程序的行为是否安全，在逆向分析中，我们可以通过提交一个文件给沙箱程序来判断程序内部的大致逻辑，通过对沙箱报告的分析，有时候可以有效加快我们的逆向分析进程。</p><p>常见的在线沙箱包括但不限于：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>VirusTotal：https://www.virustotal.com/gui/
VirSCAN：https://virscan.org/
微步云沙箱：https://s.threatbook.cn/
Joe Sandbox Cloud Basic：https://www.joesandbox.com/#windows
布谷鸟沙盒：https://sandbox.pikker.ee/
OPSWAT MetaDefender：https://metadefender.opswat.com/?lang=en
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="题目和操作" tabindex="-1"><a class="header-anchor" href="#题目和操作" aria-hidden="true">#</a> 题目和操作</h3><blockquote><p><strong>题目描述：</strong></p><p>某日，一小学生弄了个U盘到打印店打印文件，U盘往计算机上一插，发现机子死机了，高明的打印店老板为了防止此类事件，特意设置了霸王键，可一键备份，随后老板把U盘备份了交给小王，小王想要知道U盘里到底被感染了什么你能帮帮他吗？</p><p>主机C:\\Reverse\\8目录下提供了这个UP_BOOT.img文件，请对该文件进行逆向分析，找到题目过关的Flag。</p></blockquote><p>题目是一个有病毒的U盘文件。这个文件是img文件，那么按照提示就用7Z解压。其中一个文件看着就是一个不想让我们通关的游戏。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304142033630.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但另一个文件打开就是战书……看来就还是需要继续分析这整个软件。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304142035838.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>继续解压会发现还有三个文件。其中两个可执行就需要重点关照。其中1.exe的文件打开后命令行闪过，非常可疑。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304142043189.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>用安天的分析工具可以看到底发生了甚么。分析之后有一个test.txt的文本文件。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304142049168.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>看来是运行的时候隐藏起来了，直接看隐藏文件就行。出现内容<code>WdubQ4IGEzAG54NfATJTNhI4TLIvPvENyTLLWb3YCNBeK5wad5XCgrSQNOih1F</code></p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304142051118.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>取16位的md5就好啦。</p><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304142054056.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="buuctf" tabindex="-1"><a class="header-anchor" href="#buuctf" aria-hidden="true">#</a> BUUCTF</h2><h3 id="flareon4-login" tabindex="-1"><a class="header-anchor" href="#flareon4-login" aria-hidden="true">#</a> [FlareOn4]login</h3><figure><img src="http://picgo-1258675557.cos.accelerate.myqcloud.com/202304170812033.png?imageMogr2/quality/70/strip|watermark/2/text/wqkgMHhmLiBEYWFpaGFuZyBXb25n/font/U1RIZWl0aSBMaWdodOWNjuaWh-m7keS9ky50dGM/fontsize/18/fill/I2ZmZmZmZg/dissolve/70/shadow/40/gravity/southeast/dx/10/dy/10|watermark/3/type/3/text/V2FuZ0RhaGVuZ0RhYWloYW5nV29uZ1dESA" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>一眼Rot13，但是需要看到正则<code>/[a-zA-Z]/g</code>只取字母，不用符号变换。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>galf<span class="token operator">=</span><span class="token string">&#39;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&#39;</span>
flag<span class="token operator">=</span><span class="token string">&#39;&#39;</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> galf<span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">13</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">13</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>得到<code>ClientSideLoginsAreEasyMflare:on;com</code>，符号不换就是<code>flag{ClientSideLoginsAreEasy@flare-on.com}</code>。</p>`,55);function m(g,h){const t=l("RouterLink");return n(),o("div",null,[c,s("p",null,[a("在"),r(t,{to:"/tech/ctf/OEP.html"},{default:p(()=>[a("新手必须懂得什么叫OEP，以及查找的常用方式软件破解什么是oep?")]),_:1}),a("这篇文章中解释，并且别人还给出了另外几种有种（但我还没有尝试）的方法。")]),u])}const Z=i(d,[["render",m],["__file","Week-05.html.vue"]]);export{Z as default};
