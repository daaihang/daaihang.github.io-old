import{ab as e,H as s,I as n,ac as a}from"./framework-c2f60e5e.js";const i={},o=a(`<p><strong>二、Windows API</strong></p><p>ANSI的ASCII字符集及其派生字符集（也称多字节字符集）比较旧，而Unicode字符集比较新，固定以双字节表示一个字。Windows操作系统在声明一个API时，如果这个API存在字符串参数，便会指定字符集。每个含有字符串参数的API同时有两个版本：即ANSI，Unicode。尾部带A的API是ANSI版本，带W的API是Unicode版本。</p><p>例如：我们在编程时使用的MessageBox实际上是一个宏，根据字符集的不同被定义为不同版本的MessageBox，如果是UNICODE字符集，则实际上为MessasgeBoxW，如果是ANSI字符集，则实际上为MessageBoxA：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">UNICODE</span></span>
define MessageBox MessageBoxW
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
define MessageBox MessageBoxA
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// !UNICODE</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>三、交叉引用</strong></p><p>通过交叉引用（XREF）可以知道指令代码相互调用的关系，如下图所示：</p><figure><img src="https://cdn.jsdelivr.net/gh/daaihang/PicGo/202303192135244.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这句“CODE XREF: WinMain(x,x,x,x)+10↑p”，表示调用sub_41BD0D这个函数的地方为WinMain函数，p表示是以函数调用（procedure）的方式跳转到当前的位置的，其他的一些符号：o表示偏移值（offset），j表示跳转（jump）。</p><p>在sub_41BD0D上面按X键，可以打开交叉引用窗口，这里会列出所有调用了sub_41BD0D这个函数的地方，如图所示：</p><figure><img src="https://cdn.jsdelivr.net/gh/daaihang/PicGo/202303192135269.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>从图中可以看到，只有在WinMain函数中调用了sub_41BD0D这个函数。</p>`,11),c=[o];function p(t,d){return s(),n("div",null,c)}const l=e(i,[["render",p],["__file","2023-03-19.html.vue"]]);export{l as default};
