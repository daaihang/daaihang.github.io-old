import{ab as n,H as s,I as a,ac as t}from"./framework-c2f60e5e.js";const e={},p=t(`<h3 id="sprintf函数" tabindex="-1"><a class="header-anchor" href="#sprintf函数" aria-hidden="true">#</a> sprintf函数</h3><p>将后面的元素代到abjd这个里面的两个%d%d里，然后赋值给string</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">char</span> str<span class="token punctuation">[</span><span class="token number">0x100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token function">sprintf</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">&quot;BJD{%d%d2069a45792d233ac}&quot;</span><span class="token punctuation">,</span> <span class="token number">19999</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">puts</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以得到：BJD{<strong>199990</strong>2069a45792d233ac}</p><p>e.g.:</p><figure><img src="https://cdn.jsdelivr.net/gh/daaihang/PicGo/202302272011709.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="dialogfunc" tabindex="-1"><a class="header-anchor" href="#dialogfunc" aria-hidden="true">#</a> dialogfunc</h3><p>有图形窗口的GUI页面会有此函数。</p><p><code>DialogBoxParam</code>函数根据对话框模板资源创建一个模态的对话框。在显示对话框之前，函数将一个应用程序定义的值传到对话框过程中 WM_INITDIALOG 消息的 lParam 参数，应用程序可用此值来初始化对话框。</p><p>既然有初始话对话框，那么就一定有会读取对话框的函数，<strong>需要进入该函数查看</strong>。</p><ul><li>GetDlgItemTextA函数，在DialogFunc中。检索与对话框中的控件关联的标题或文本。GetDlgItemText是C++中的函数，调用这个函数以获得与对话框中的控件相关的标题或文本。GetDlgItemText成员函数将文本拷贝到lpStr指向的位置并返回拷贝的字节的数目。</li></ul>`,11),c=[p];function o(i,l){return s(),a("div",null,c)}const u=n(e,[["render",o],["__file","IDA-HowToUse.html.vue"]]);export{u as default};
